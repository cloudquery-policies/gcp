name: cq_policy_run

on:
  schedule:
    - cron: '0 1 * * *' # Run every night on 01:00am UTC
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  nightly_policy_run:
    if: github.event_name != 'schedule' || (github.event_name == 'schedule' && github.repository == 'cloudquery-policies/gcp')
    strategy:
      matrix:
        dbversion: [ "postgres:latest" ]
        go: [ "1.17" ]
        platform: [ ubuntu-latest ] # can not run in macOS and widnowsOS
    runs-on: ${{ matrix.platform }}
    services:
      postgres:
        image: ${{ matrix.dbversion }}
        env:
          POSTGRES_PASSWORD: pass
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out code into the policy directory
        uses: actions/checkout@v2

      - name: Cache CQ
        id: cache-cq-binary
        uses: actions/cache@v2
        with:
          path: cloudquery
          key: ${{ runner.os }}-${{ hashFiles('cloudquery') }}

      - name: Download Cloudquery
        if: steps.cache-cq-binary.cache-hit != 'true'
        run: |
          curl -L https://github.com/cloudquery/cloudquery/releases/latest/download/cloudquery_${OS}_x86_64 -o cloudquery
          chmod a+x cloudquery
        env:
          OS: Linux

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCLOUD_PROJECT_ID }}
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          export_default_credentials: true

      - name: Cq fetch
        run: |
          ./cloudquery fetch --config ./test/policy_cq_config.hcl --enable-console-log --fail-on-error
        env:
          CQ_NO_TELEMETRY: 1

      - name: Policy Run
        run: |
          ./cloudquery policy run --config ./test/policy_cq_config.hcl --enable-console-log --stop-on-failure
        env:
          CQ_NO_TELEMETRY: 1

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: ${{ failure() }}
        env:
          SLACK_CHANNEL: oss-tests
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: 'GCP Policies - nightly run failed'
          SLACK_TITLE: GCP - nightly fetch failed
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}